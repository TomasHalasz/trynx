<?php

namespace App\B2BModule\Presenters;


use Nette\Application\UI\Form,
    Nette\Image;

class PartnersBookPresenter extends \App\B2BModule\Presenters\BasePresenter {

    /** @persistent */
    public $search = NULL;

    /** @persistent */
    public $page = 1;

    public $modal;

    //public $search = NULL;
    public $reload;
    
    /**
    * @inject
    * @var \App\Model\PartnersManager
    */
    public $PartnersManager;
    
    /**
    * @inject
    * @var \App\Model\CompaniesAccessManager
    */
    public $CompaniesAccessManager;        

    /**
    * @inject
    * @var \App\Model\UsersManager
    */
    public $UsersManager;    	
	
    /**
    * @inject
    * @var \App\Model\UserManager
    */
    public $UserManager;

    public function startup()
    {
        parent::startup();
        //$this->translator->setPrefix(['B2BModule.PartnersBook']);
    }

    public function beforeRender()
    {
        //nothing to walkarround parent beforeRender();
    }

  /*  public function actionDefault()
    {
        $this->setLayout(__DIR__ . '/../templates/@layoutmain.latte');
    }*/

    public function actionDefault($search = NULL)
    {
        if ($search == NULL){
            $this->search = $search;
        }

        if (!$this->getUser()->isLoggedIn()) {
            $this->flashMessage($this->translator->translate('Zadali_jste_neplatný_odkaz'), 'danger');
            $this->redirect(':B2B:Mainpage:default');
        }
        return parent::actionDefault(); // TODO: Change the autogenerated stub
    }


    public function renderDefault() {
		$this->modal = FALSE;
        $this->template->unMoHandler = NULL;
        $this->template->pdfPreviewData = NULL;
        $this->template->locale = $this->translatorMain->getLocale();
        $this->template->modal = FALSE;
        $this->template->lattePath = $this->getLattePath();
        $this->template->logged = $this->getUser()->isLoggedIn();
        $this->template->version = $this->parameters['app_version'];
        $this->template->debugMode = $this->parameters['debugMode'];
        $this->template->cl_partners_book_id = NULL;

		$this->template->users = $this->UserManager->getUserById($this->user->getId());
		$this->template->reload = $this->reload;
        $this->template->role = $this->user->isInRole('b2b') ? 'b2b' : 'user';

        if (is_null($this->search)) {
            $templateData = $this->PartnersManager->findAll()->where('cl_users_id = ?', $this->user->getId())->order('company');
        }else{
            $templateData = $this->PartnersManager->findAll()->where('cl_users_id = ? AND (company LIKE ? OR city LIKE ?)', $this->user->getId(), '%'.$this->search.'%', '%'.$this->search.'%')->
                            order('company');
            $this['search']->setDefaults(['search' => $this->search]);
        }


//paginator start
        $paginator = new \Nette\Utils\Paginator;
        $ItemsOnPage = 40;

        $paginator->setItemsPerPage($ItemsOnPage); // počet položek na stránce
        $totalItems = $templateData->count();

        $paginator->setItemCount($totalItems); // celkový počet položek (např. článků)
        $pages = ceil($totalItems / $ItemsOnPage);
        if (is_null($this->page))
            $this->page = 1;
        if ($this->page > $pages)
            $this->page = $pages;

        $paginator->setPage($this->page);

        $this->template->paginator = $paginator;
        $steps = array();
        for ($i = 1; $i <= $pages; $i++) {
            $steps[] = $i;
        }
        $this->template->steps = $steps;
        $this->template->partnersbook = $templateData->limit($paginator->getLength(), $paginator->getOffset());

    }

    public function handleNewPage($page)
    {
        $this->page = $page;
        $this->redrawControl('content');
    }


    protected function createComponentSearch($name)
    {
            $form = new Form($this, $name);
            $form->addText('search', $this->translator->translate('Hledat:'), 40, 40)
                    ->setHtmlAttribute('class','form-control input-sm')
                    ->setHtmlAttribute('placeholder',$this->translator->translate('Název_firmy_nebo_město'));
            $form->addSubmit('send', $this->translator->translate('Hledat'))->setHtmlAttribute('class','btn btn-primary');
            $form->addSubmit('reset', 'X')->setHtmlAttribute('class','btn btn-primary');
            $form->onSuccess[] = array($this, 'SubmitSearchSubmitted');
            return $form;
    }

    public function SubmitSearchSubmitted(Form $form)
    {
        $data=$form->values;
        //dump($data);
        //	die;
        if ($form['send']->isSubmittedBy())
        {
            $this->search = $data['search'];
            $this->page = 1;
            $this->redrawControl('content');
        }
        if ($form['reset']->isSubmittedBy())
        {
            $this->search = NULL;
            $this->page = 1;
            $this['search']->setDefaults(array('search' => ''));
            //$this->redirect(':B2B:PartnersBook:');
            $this->redirect(':B2B:PartnersBook:');
        }
       //



    }	    

    public function handleSelectPartner($id, $cl_partners_branch_id)
    {
		$this->user->identity->cl_partners_book_id = $id;
		if ($cl_partners_branch_id == 'null') {
            $this->user->identity->cl_partners_branch_id = null;
        }else{
            $this->user->identity->cl_partners_branch_id = $cl_partners_branch_id;
        }

		$this->UserManager->updateUser(array('id' => $this->user->getId(), 'cl_partners_book_id' => $id, 'cl_partners_branch_id' => $id ));

		//$this->reload = TRUE;
		//$this->redrawControl('modalCompanyHide');
		//$this->flashMessage('Firma byla změněna.', 'success');
        $this->redirect(':B2B:Mainpage:default');
        //$this->redrawControl('content');
    }


}
